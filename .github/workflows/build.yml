name: Build and Distribute macOS Desktop App

on:
  push:
    branches:
      - main

jobs:

  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
    - uses: actions/checkout@v3
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: get version
      run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
    - name: create release
      id: create-release
      uses: actions/github-script@v6
      with:
        script: |
          const { data } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `app-v${process.env.PACKAGE_VERSION}`,
            name: `Desktop App v${process.env.PACKAGE_VERSION}`,
            body: 'Take a look at the assets to download and install this app.',
            draft: true,
            prerelease: false
          })
          return data.id

  build-tauri-macos:
    needs: create-release
    permissions:
      contents: write
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Set macOS deployment target
      run: |
        brew install cmake ninja
        brew link cmake
        export MACOSX_DEPLOYMENT_TARGET=11.0
    - name: Use Boost.Filesystem (macOS)
      run: |
        brew install boost
        sed -i '' 's/std::filesystem/boost::filesystem/g' $(find . -name "*.cpp" -or -name "*.h")
    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
    - name: install frontend dependencies
      run: npm install
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        CMAKE_BUILD_TYPE: Release
      with:
        releaseId: ${{ needs.create-release.outputs.release_id }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-app
        path: src-tauri/target/release/*.dmg

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri-macos]
    if: success()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    - name: Publish Release
      id: publish-release
      uses: actions/github-script@v6
      env:
        release_id: ${{ needs.create-release.outputs.release_id }}
      with:
        script: |
          github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: process.env.release_id,
            draft: false,
            prerelease: false
          })
    - name: Upload macOS App
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.publish-release.outputs.upload_url }}
        asset_path: ./macos-app/*.dmg
        asset_name: app-macos.dmg
        asset_content_type: application/x-apple-diskimage